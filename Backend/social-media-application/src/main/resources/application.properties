spring.application.name=social-media-application
spring.datasource.url=jdbc:postgresql://localhost:5432/SocialMedia
spring.datasource.username=postgres
spring.datasource.password=nithruvan

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# --- OAuth2 Client Properties ---
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
# Scope defines what information we request from Google (profile info and email are common)
spring.security.oauth2.client.registration.google.scope=profile,email

jwt.secret = "xU1uGIktBnYD1ivPZtmbZvs4nq//YIAD2/EaMOcFCYeRVCnF9+ubxpWUvqUIg1tncwtjOoVexigAUMIfDVrgWg=="
jwt.expiration=3600000

# --- App Specific Properties ---
# URL for the frontend callback page that handles the OAuth2 redirect and token
app.oauth2.redirectUri=http://localhost:3000/auth/callback

# --- AI Tagging Service (Gemini) ---
# Replace YOUR_API_KEY_HERE with the actual API key you obtained from Google AI Studio
ai.provider.api.key=

# Replace with the correct Gemini API endpoint URL for the model you want to use
# Example for gemini-1.5-flash (check Google AI documentation for the latest/correct URL)
ai.provider.api.endpoint=